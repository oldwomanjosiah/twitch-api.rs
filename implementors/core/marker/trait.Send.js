(function() {var implementors = {};
implementors["twitch_api_rs"] = [{"text":"impl Send for Scope","synthetic":true,"types":[]},{"text":"impl Send for ScopeSet","synthetic":true,"types":[]},{"text":"impl Send for ClientAuthRequest","synthetic":true,"types":[]},{"text":"impl Send for ClientAuthResponse","synthetic":true,"types":[]},{"text":"impl Send for ClientAuthToken","synthetic":true,"types":[]},{"text":"impl Send for ClientId","synthetic":true,"types":[]},{"text":"impl Send for ClientSecret","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Send for FailureStatus&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for PossibleResponse&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;C&gt; !Send for RequestError&lt;C&gt;","synthetic":true,"types":[]},{"text":"impl Send for CommonResponseCodes","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Send for GetChannelInformationRequest&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for GetChannelInformationResponse","synthetic":true,"types":[]},{"text":"impl Send for ChannelInformation","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Send for GetClipsRequest&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for GetClipsResponse","synthetic":true,"types":[]},{"text":"impl Send for ClipInfo","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Send for GetUsersRequest&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for GetUsersResponse","synthetic":true,"types":[]},{"text":"impl Send for UserDescription","synthetic":true,"types":[]},{"text":"impl Send for BroadcasterId","synthetic":true,"types":[]},{"text":"impl Send for BroadcasterName","synthetic":true,"types":[]},{"text":"impl Send for BroadcasterLanguage","synthetic":true,"types":[]},{"text":"impl Send for BroadcasterType","synthetic":true,"types":[]},{"text":"impl Send for BroadcasterViews","synthetic":true,"types":[]},{"text":"impl Send for GameName","synthetic":true,"types":[]},{"text":"impl Send for GameId","synthetic":true,"types":[]},{"text":"impl Send for ExtensionId","synthetic":true,"types":[]},{"text":"impl Send for ClipId","synthetic":true,"types":[]},{"text":"impl Send for ClipTitle","synthetic":true,"types":[]},{"text":"impl Send for ViewCount","synthetic":true,"types":[]},{"text":"impl Send for UserId","synthetic":true,"types":[]},{"text":"impl Send for UserName","synthetic":true,"types":[]},{"text":"impl Send for UserLogin","synthetic":true,"types":[]},{"text":"impl Send for UserType","synthetic":true,"types":[]},{"text":"impl Send for UserEmail","synthetic":true,"types":[]},{"text":"impl Send for VideoId","synthetic":true,"types":[]},{"text":"impl Send for VideoLanguage","synthetic":true,"types":[]},{"text":"impl Send for Pagination","synthetic":true,"types":[]},{"text":"impl Send for Count","synthetic":true,"types":[]},{"text":"impl Send for Period","synthetic":true,"types":[]},{"text":"impl Send for RFC3339Time","synthetic":true,"types":[]},{"text":"impl Send for StartedAt","synthetic":true,"types":[]},{"text":"impl Send for EndedAt","synthetic":true,"types":[]},{"text":"impl Send for ISOLanguage","synthetic":true,"types":[]},{"text":"impl Send for Url","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()